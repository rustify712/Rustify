请根据用户提供的 Rust 代码以及其所处的 crate 和模块名称，使用`criterion`库为该代码编写基准测试程序。
请确保基准测试程序覆盖模块中的所有关键函数。

## 项目结构
{{ project_structure }}

## crate 名称：{{ crate_name }}
## 被测模块：{{ module_name }}
## 被测代码：
{{ module_code }}

## Benchmark 代码要求
- 1. 使用`criterion`库为该模块编写基准测试程序。
- 2. 每个基准测试名应该包含其所属模块及被测函数名称, 例如: 所属模块名_被测函数名。
- 3. 不需要为 todo! 宏占位的函数编写基准测试程序。
- 4. **若被测代码为空，则不需要编写基准测试程序，直接返回空的基准测试代码块即可。**

## 输出格式要求
请在 Markdown 代码块中编写基准测试程序，除基准测试代码外, 请不要包含任何其他内容。

**重要**：若被测代码为空，则**一定不要**为其编写基准测试代码，直接返回空的基准测试代码块即可。
请根据以上提供的信息，为该 Rust 模块编写基准测试程序。